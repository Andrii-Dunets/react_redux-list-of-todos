{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","App.tsx","index.tsx"],"names":["currentTodoReducer","state","action","type","payload","filterReducer","query","status","actions","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","className","map","todo","id","title","TodoFilter","onSubmit","event","preventDefault","value","placeholder","style","pointerEvents","Loader","TodoModal","href","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","App","dispatch","fetchTodos","a","todoActions","useEffect","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ca8cbae9.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    // Implement all actions here\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","export const actions = { /* put action creators here */};\n\nconst filterReducer = () => {\n  return {\n    query: '',\n    status: 'all',\n  };\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype AddTodosAction = {\n  type: 'todos/ADD';\n  payload: Todo[];\n};\n\nconst add = (todos: Todo[]): AddTodosAction => ({\n  type: 'todos/ADD',\n  payload: todos,\n});\n\nexport const actions = { add };\n\nconst todosReducer = (todos: Todo[] = [], action: AddTodosAction): Todo[] => {\n  switch (action.type) {\n    case 'todos/ADD':\n      return action.payload;\n\n    default:\n      return todos;\n  }\n};\n\nexport default todosReducer;\n","// import { composeWithDevTools } from 'redux-devtools-extension';\nimport { createStore, combineReducers } from 'redux';\n// import { createStore, applyMiddleware, combineReducers } from 'redux';\n// import thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  // composeWithDevTools(\n  //   applyMiddleware(thunk),\n  // ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport React from 'react';\nimport { useAppSelector } from '../../app/hooks';\n\nexport const TodoList: React.FC = () => {\n  const todos = useAppSelector(state => state.todos);\n\n  return (\n    <>\n      <p className=\"notification is-warning\">\n        There are no todos matching current filter criteria\n      </p>\n\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {todos.map(todo => (\n            <tr data-cy=\"todo\">\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\"> </td>\n\n              <td className=\"is-vcentered is-expanded\">\n                <p className=\"has-text-danger\">{todo.title}</p>\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const TodoFilter: React.FC = () => {\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select data-cy=\"statusSelect\">\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Loader } from '../Loader';\n\nexport const TodoModal: React.FC = () => {\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      <Loader />\n\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <div\n            className=\"modal-card-title has-text-weight-medium\"\n            data-cy=\"modal-header\"\n          >\n            Todo #3\n          </div>\n\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button type=\"button\" className=\"delete\" data-cy=\"modal-close\" />\n        </header>\n\n        <div className=\"modal-card-body\">\n          <p className=\"block\" data-cy=\"modal-title\">fugiat veniam minus</p>\n\n          <p className=\"block\" data-cy=\"modal-user\">\n            {/* For not completed */}\n            <strong className=\"has-text-danger\">Planned</strong>\n\n            {/* For completed */}\n            <strong className=\"has-text-success\">Done</strong>\n            {' by '}\n            <a href=\"mailto:Sincere@april.biz\">Leanne Graham</a>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { getTodos } from './api';\nimport { useAppDispatch } from './app/hooks';\nimport { actions as todoActions } from './features/todos';\n\nexport const App: React.FC = () => {\n  const dispatch = useAppDispatch();\n\n  const fetchTodos = async () => {\n    try {\n      const todos = await getTodos();\n\n      dispatch(todoActions.add(todos));\n    } catch {\n      dispatch(todoActions.add([]));\n    }\n  };\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              <Loader />\n              <TodoList />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <TodoModal />\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}